const sql = {};

sql.createUsersTable = () => `
CREATE TABLE app_users (
    user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar,
    username varchar,
    password varchar,
    password_temp varchar,
    image_url varchar,
    joineddate timestamp DEFAULT CURRENT_DATE
);`;

sql.createBuildsTable = () => `
  CREATE TABLE builds (
    bld_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    bld_name varchar,
    price float,
    user_id int REFERENCES app_users (user_id)
  );
`;

sql.createEquipmentTable = () => `
  CREATE TABLE equipment (
    eq_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    eq_name VARCHAR,
    seller VARCHAR,
    type VARCHAR,
    price FLOAT,
    img_url VARCHAR,
    link VARCHAR
  );
`;

sql.createJunctionTable = () => `
  CREATE TABLE builds_equipment (
    bld_id INT REFERENCES builds (bld_id),
    eq_id INT REFERENCES equipment (eq_id)
  )
`;

sql.insertOneUser = (values) => ({
  text: `
  INSERT INTO "app_users" (name, username, password, joineddate)
    VALUES ($1, $2, $3, $4) 
    RETURNING user_id;
  `,
  values,
});

sql.addBuilds = () => {
  
}

sql.oneUser = (username) => ({
  text: `
      SELECT * FROM app_users WHERE username = $1;
    `,
  values: [username],
});

sql.userById = (id) => ({
  text: `
      SELECT * FROM app_users WHERE user_id = $1;
    `,
  values: [id],
});

sql.createBuildsTable = `
`;

module.exports = sql;
